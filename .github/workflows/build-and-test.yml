name: Build and Test
on: [push, pull_request]
jobs:

  # Use skip-duplicate-actions to prevent duplicate workflow runs.
  # This configuration sets the should_skip flag for a pull_request workflow run if there is a completed or ongoing
  # workflow run on the exact same content (same tree hash).
  skip_duplicate_workflow_check:
    runs-on: ubuntu-latest
    name: "skip-duplicate-workflow-check"
    outputs:
      should_skip: ${{steps.skip_check.outputs.should_skip}}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["push"]'

  # Any *_CHECK argument causes industrial_ci to only perform the given check.
  code_check:
    needs: skip_duplicate_workflow_check
    if: ${{needs.skip_duplicate_workflow_check.outputs.should_skip != 'true'}}
    runs-on: ubuntu-latest
    name: "code-check"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Industrial CI - C++ ClangFormat
        uses: 'ros-industrial/industrial_ci@master'
        env:
          CLANG_FORMAT_CHECK: file
          ROS_DISTRO: noetic

      - name: Industrial CI - Python Black
        uses: 'ros-industrial/industrial_ci@master'
        env:
          BLACK_CHECK: true
          ROS_DISTRO: noetic

  build_and_test:
    needs: skip_duplicate_workflow_check
    if: ${{needs.skip_duplicate_workflow_check.outputs.should_skip != 'true'}}
    runs-on: ubuntu-24.04
    name: "ros${{matrix.ros_version}}-${{matrix.ros_distro}}-sdk-${{matrix.ensenso_sdk_version}}"
    strategy:
      fail-fast: false
      matrix:
        ros_distro: [jazzy, humble, foxy, noetic]
        ensenso_sdk_version: [4.2.1765, 4.1.1033, 4.0.1526]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare repo for ROS2 build
        if: ${{ matrix.ros_distro != 'noetic' }}
        run: ./.github/scripts/prepare_ros2_build.sh
        shell: bash
        env:
          ROS_VERSION: 2
          ROS_DISTRO: ${{matrix.ros_distro}}

      - name: Industrial CI - Build and Test
        uses: 'ros-industrial/industrial_ci@master'
        env:
          AFTER_INSTALL_TARGET_DEPENDENCIES: "./.github/scripts/install_external_dependencies.sh"
          CATKIN_LINT: true
          CATKIN_LINT_ARGS: "--resolve-env"
          DOCKER_RUN_OPTS: "-e ENSENSO_INSTALL=/opt/ensenso -e ENSENSO_SDK_VERSION=${{matrix.ensenso_sdk_version}}"
          PIP_BREAK_SYSTEM_PACKAGES: true
          ROS_DISTRO: ${{matrix.ros_distro}}
          ROS_PYTHON_VERSION: 3
