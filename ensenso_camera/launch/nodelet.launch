<!-- Open an Ensenso stereo camera in a nodelet. -->

<launch>
  <arg name="serial" doc="Serial of the stereo camera (default: first found camera)" default="" />
  <arg name="settings" doc="JSON file with camera parameters" default="" />
  <arg name="camera_frame" doc="The camera's tf frame (default: optical_frame_SERIAL)" default="" />
  <arg name="link_frame" doc="The camera's link tf frame (default: camera_frame)" default="" />
  <arg name="target_frame" doc="The tf frame the data will be returned in (default: camera_frame)" default="" />
  <arg name="tcp_port" doc="The TCP port to open on the NxLib (-1=off, 0=autoSelect, >0=portNumber)" default="-1" />
  <arg name="threads" doc="The number of threads used by the NxLib for this node (-1=autoDetect)" default="-1" />
  <arg name="wait_for_camera" doc="Whether this node should wait for the camera to become available" default="false" />

  <node pkg="nodelet" type="nodelet" name="manager_" args="manager" output="screen" />

  <node pkg="nodelet" type="nodelet" name="Ensenso_$(arg serial)"
        args="load ensenso_camera/stereo_camera_nodelet /manager_" output="screen">
    <param name="serial" type="string" value="$(arg serial)" />
    <param name="settings" type="string" value="$(arg settings)" />
    <param name="camera_frame" type="string" value="$(arg camera_frame)" />
    <param name="link_frame" type="string" value="$(arg link_frame)" />
    <param name="target_frame" type="string" value="$(arg target_frame)" />
    <param name="tcp_port" type="int" value="$(arg tcp_port)" />
    <param name="threads" type="int" value="$(arg threads)" />
    <param name="wait_for_camera" type="bool" value="$(arg wait_for_camera)" />
  </node>
</launch>