# The parameter set that is used for capturing the image for this data set.
string parameter_set

# Enable these flags for every type of data that you want to receive from the camera.
# If none of the flags is given, the point cloud flag is automatically set.
bool request_raw_images
bool request_rectified_images
bool request_disparity_map
bool request_point_cloud
bool request_normals
bool request_rgbd
bool request_depth_map

bool linked_camera_request
bool request_linked_camera_rgb_image
bool request_registered_point_cloud
bool linked_camera_auto_exposure

# When this flag is enabled, the requested data will be published on the
# corresponding topics (see the documentation of the camera node).
# Automatically enabled, when publish_results and include_results_in_response
# are both not given.
bool publish_results
# When this flag is enabled, the resulting data will be included in the result
# of this action (see below).
bool include_results_in_response

# When this flag is enabled, the TF transformation between camera and target
# frame will not be updated from the TF server, but fetched from a cache. This
# can be used to save some time when the camera and the target frame did not
# move since the last data request.
bool use_cached_transformation

# When registered_point_cloud is set, monocular_camera_serial definies the
# serial number of the monocular camera to which the point cloud should be
# registered to, if unset the linked camera of the node is used as reference.
string monocular_camera_serial

# When we are interested in logging the time each step of the pipeline takes
bool log_time

---

# The resulting point cloud. Also contains the normals when they are requested.
sensor_msgs/PointCloud2 point_cloud
rgbd/RGBDImage rgbd_image

# Registered point cloud, linked camera RGBD image and RGB image to be used if a monocular camera is present
sensor_msgs/Image linked_camera_rgb_image        # A synchronized color image.
sensor_msgs/PointCloud2 registered_point_cloud   # A synchronized point cloud.
float32 disparity_map_scale_factor               # Scaling factor used for the disparity map

# The disparity map as it is represented in the NxLib.
sensor_msgs/Image disparity_map

# The depth map is a 3 channel image with 3D Coordinates (x,y,z). 
# Image dimensions (width, height) are the same as disparity map
sensor_msgs/Image depth_map

# The raw images of the left and right camera respectively. A single image if
# FlexView is disabled.
sensor_msgs/Image[] left_raw_images
sensor_msgs/Image[] right_raw_images
sensor_msgs/CameraInfo left_camera_info
sensor_msgs/CameraInfo right_camera_info
sensor_msgs/CameraInfo linked_camera_info

# The rectified images of the left and right camera respectively. A single image
# if FlexView is disabled.
sensor_msgs/Image[] left_rectified_images
sensor_msgs/Image[] right_rectified_images
sensor_msgs/CameraInfo left_rectified_camera_info
sensor_msgs/CameraInfo right_rectified_camera_info

# A potential NxLib exception that occured while executing the action.
NxLibException error

# Return value indicating if the call was successful 
bool success

---

# Set to true as soon as the images were captured.
bool images_acquired
